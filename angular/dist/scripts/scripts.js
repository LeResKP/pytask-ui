"use strict";angular.module("pytaskApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","pytaskControllers","pytaskServices"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/tasks/:idtask",{templateUrl:"views/task.html",controller:"taskCtrl"}).when("/projects/:idproject",{templateUrl:"views/project.html",controller:"projectCtrl"}).otherwise({redirectTo:"/"})}]);var pytaskServices=angular.module("pytaskServices",["ngResource"]);pytaskServices.factory("Task",["$resource",function(a){return a("api/tasks/:idtask/:action.json",{idtask:"@idtask",action:""},{update:{method:"PUT"},patch:{method:"PATCH"}})}]),pytaskServices.factory("Project",["$resource",function(a){return a("api/projects/:idproject/:action.json",{idproject:"@idproject",action:""},{update:{method:"PUT"},patch:{method:"PATCH"}})}]),pytaskServices.factory("AlertService",["$rootScope","$timeout",function(a,b){var c={};return a.alerts=[],c.add=function(c,d){var e=this,f={type:c,msg:d,close:function(){e.closeAlert(this)}};a.alerts.push(f),b(function(){var b=a.alerts.indexOf(f);e.closeAlert(b)},3e3)},c.set=function(b,c){a.alerts=[],this.add(b,c)},c.closeAlert=function(b){a.alerts.splice(b,1)},c}]);var ACTIVE_STATUS="ACTIVE",httpErrorToString=function(a){return a.status+" "+a.statusText+": "+a.data.msg},pytaskControllers=angular.module("pytaskControllers",[]);pytaskControllers.controller("MainCtrl",["$scope","Task","Project",function(a,b,c){a.tasks=b.query(),a.projects=c.query(),a.isActive=function(a){return a.status===ACTIVE_STATUS},a.setActive=function(b){b.$patch({action:"active"},function(){for(var c=0,d=a.tasks.length;d>c;c++){var e=a.tasks[c];if(e.idtask!==b.idtask&&e.status===ACTIVE_STATUS){e.status="";break}}})}}]),pytaskControllers.controller("taskCtrl",["$scope","$routeParams","AlertService","Task","Project",function(a,b,c,d,e){var f="new"===b.idtask;a.task=f?new d:d.get({idtask:b.idtask}),a.projects=e.query(),a.updateTask=function(b){a.taskForm.$valid&&(b.idtask?b.$update(function(){c.set("success","Task updated!")},function(a){console.log(a);var b=httpErrorToString(a);c.set("danger","An error occured when updating task:"+b)}):b.$save(function(){c.set("success","Task created!")},function(a){var b=httpErrorToString(a);c.set("danger","An error occured when creating task: "+b)}))}}]),pytaskControllers.controller("projectCtrl",["$scope","$routeParams","AlertService","Project",function(a,b,c,d){var e="new"===b.idproject;a.project=e?new d:d.get({idproject:b.idproject}),a.updateProject=function(b){a.projectForm.$valid&&(b.idproject?b.$update(function(){c.set("success","Projects updated!")},function(a){var b=httpErrorToString(a);c.set("danger","An error occured when updating project: "+b)}):b.$save(function(){c.set("success","Project created!")},function(a){var b=httpErrorToString(a);c.set("danger","An error occured when creating project: "+b)}))}}]);